import json, time, hashlib, logging, model
import webQ.q_orm  as orm
from webQ.q_response import Response, json_response, WebSocketResponse, WSMsgType, render_json, render_image
from webQ.q_helpers import Page
from model_view import *


{% for table in tables %}
async def {{table.table_name}}_Query_Detail(request):
    """
    Description end-point
    ---
    description: {{table.table_name}}明细查询
    tags:
    - select detail
    produces:
    - application/json
    parameters:
    - name: id
      in: query
      type: string
      required: true
      description: {{table.pri_key}} 唯一标示符
    """
    id = request.query.get('id')
    try:
        if not id:
            tablelist = await {{table.table_name}}.findAll(selectField='*')
        else:
            tablelist = await {{table.table_name}}.findAll(selectField='*', where=f'{{table.pri_key}} = "{id}"')
        data = dict(code=200,message="", data=tablelist)
        return render_json(data)
    except Exception as e:
        data = dict(code=500,message=str(e),data="")
        return render_json(data)

{% endfor %}